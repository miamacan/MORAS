function BST.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push pointer 0
return
function BST.size 0
push argument 0
pop pointer 0
push this 1
return
function BST.insert 3
push argument 0
pop pointer 0
push argument 1
call Node.new 1
pop local 0
push this 1
push constant 1
add
pop this 1
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop this 0
push constant 0
return
label IF_FALSE0
push this 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 1
pop local 2
push argument 1
push local 1
call Node.getValue 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
call Node.getLeft 1
pop local 1
goto IF_END1
label IF_FALSE1
push local 1
call Node.getRight 1
pop local 1
label IF_END1
goto WHILE_EXP0
label WHILE_END0
push local 0
push local 2
call Node.setParent 2
pop temp 0
push argument 1
push local 2
call Node.getValue 1
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push local 0
call Node.setLeft 2
pop temp 0
goto IF_END2
label IF_FALSE2
push local 2
push local 0
call Node.setRight 2
pop temp 0
label IF_END2
push constant 0
return
function BST.search 1
push argument 0
pop pointer 0
push this 0
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push argument 1
push local 0
call Node.getValue 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
return
goto IF_END0
label IF_FALSE0
push argument 1
push local 0
call Node.getValue 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
call Node.getLeft 1
pop local 0
goto IF_END1
label IF_FALSE1
push local 0
call Node.getRight 1
pop local 0
label IF_END1
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function BST.delete 4
push argument 0
pop pointer 0
push pointer 0
push argument 1
call BST.search 2
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 36
call String.new 1
push constant 84
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 122
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
label IF_FALSE0
push local 0
call Node.getParent 1
pop local 1
push local 0
call Node.getLeft 1
push constant 0
eq
push local 0
call Node.getRight 1
push constant 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop this 0
goto IF_END2
label IF_FALSE2
push local 1
call Node.getLeft 1
push local 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 0
call Node.setLeft 2
pop temp 0
goto IF_END3
label IF_FALSE3
push local 1
push constant 0
call Node.setRight 2
pop temp 0
label IF_END3
label IF_END2
push local 0
call Node.dispose 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push constant 0
return
label IF_FALSE1
push local 0
call Node.getLeft 1
push constant 0
eq
push local 0
call Node.getRight 1
push constant 0
eq
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
call Node.getLeft 1
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
call Node.getRight 1
pop local 3
goto IF_END5
label IF_FALSE5
push local 0
call Node.getLeft 1
pop local 3
label IF_END5
push local 0
push this 0
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 3
pop this 0
push local 3
push constant 0
call Node.setParent 2
pop temp 0
goto IF_END6
label IF_FALSE6
push local 1
call Node.getLeft 1
push local 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 1
push local 3
call Node.setLeft 2
pop temp 0
goto IF_END7
label IF_FALSE7
push local 1
push local 3
call Node.setRight 2
pop temp 0
label IF_END7
push local 3
push local 1
call Node.setParent 2
pop temp 0
label IF_END6
push local 0
call Node.dispose 1
pop temp 0
push this 1
push constant 1
sub
pop this 1
push constant 0
return
label IF_FALSE4
push local 0
call Node.getLeft 1
push constant 0
eq
not
push local 0
call Node.getRight 1
push constant 0
eq
not
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
call Node.getRight 1
pop local 2
label WHILE_EXP0
push local 2
call Node.getLeft 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 2
call Node.getLeft 1
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 0
push local 2
call Node.getValue 1
call Node.setValue 2
pop temp 0
push pointer 0
push local 2
call Node.getValue 1
call BST.delete 2
pop temp 0
label IF_FALSE8
push constant 0
return
function BST.clear 0
push argument 0
pop pointer 0
push this 0
call BST.disposeTree 1
pop temp 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 0
return
function BST.disposeTree 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
call Node.getLeft 1
call BST.disposeTree 1
pop temp 0
push argument 0
call Node.getRight 1
call BST.disposeTree 1
pop temp 0
push argument 0
call Node.dispose 1
pop temp 0
push constant 0
return
function BST.dispose 0
push argument 0
pop pointer 0
push this 0
call BST.disposeTree 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BST.print 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 17
call String.new 1
push constant 83
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 122
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
label IF_FALSE0
push constant 17
call String.new 1
push constant 69
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 0
call BST.inorderPrint 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
return
function BST.inorderPrint 0
push argument 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 0
call Node.getLeft 1
call BST.inorderPrint 1
pop temp 0
push argument 0
call Node.getValue 1
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push argument 0
call Node.getRight 1
call BST.inorderPrint 1
pop temp 0
push constant 0
return
