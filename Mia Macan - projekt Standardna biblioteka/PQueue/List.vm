function List.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push pointer 0
return
function List.insertFront 1
push argument 0
pop pointer 0
push argument 1
call Node.new 1
pop local 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop this 0
push local 0
pop this 1
goto IF_END0
label IF_FALSE0
push this 0
push local 0
call Node.setPrev 2
pop temp 0
push local 0
push this 0
call Node.setNext 2
pop temp 0
push local 0
pop this 0
label IF_END0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function List.insertBack 1
push argument 0
pop pointer 0
push argument 1
call Node.new 1
pop local 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop this 0
push local 0
pop this 1
goto IF_END0
label IF_FALSE0
push this 1
push local 0
call Node.setNext 2
pop temp 0
push local 0
push this 1
call Node.setPrev 2
pop temp 0
push local 0
pop this 1
label IF_END0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function List.size 0
push argument 0
pop pointer 0
push this 2
return
function List.getHead 0
push argument 0
pop pointer 0
push this 0
return
function List.getTail 0
push argument 0
pop pointer 0
push this 1
return
function List.clear 2
push argument 0
pop pointer 0
push this 0
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Node.getNext 1
pop local 1
push local 0
call Node.dispose 1
pop temp 0
push local 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push constant 0
return
function List.print 1
push argument 0
pop pointer 0
push this 0
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 14
call String.new 1
push constant 82
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 106
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 122
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
goto IF_END0
label IF_FALSE0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Node.getValue 1
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 0
call Node.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
label IF_END0
push constant 0
return
function List.removeHead 1
push argument 0
pop pointer 0
push this 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
pop local 0
push this 0
call Node.getNext 1
pop this 0
push this 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push constant 0
call Node.setPrev 2
pop temp 0
goto IF_END1
label IF_FALSE1
push constant 0
pop this 1
label IF_END1
push local 0
call Node.dispose 1
pop temp 0
push this 2
push constant 1
sub
pop this 2
push constant 0
return
function List.insert_elem 4
push argument 0
pop pointer 0
push this 0
pop local 0
push constant 0
pop local 3
label WHILE_EXP0
push local 3
push argument 2
lt
not
if-goto WHILE_END0
push local 0
call Node.getNext 1
pop local 0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP0
label WHILE_END0
push argument 1
call Node.new 1
pop local 1
push local 0
call Node.getNext 1
pop local 2
push local 1
push local 0
call Node.setPrev 2
pop temp 0
push local 0
push local 1
call Node.setNext 2
pop temp 0
push local 2
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
call Node.setNext 2
pop temp 0
push local 2
push local 1
call Node.setPrev 2
pop temp 0
label IF_FALSE0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function List.dispose 0
push argument 0
pop pointer 0
push pointer 0
call List.clear 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
